resource "aws_subnet" "subnet" {
  count = length(var.availability_zones)
  vpc_id                  = aws_vpc.main.id
  cidr_block              = cidrsubnet(var.vpc_cidr_block, 8, count.index)
  availability_zone       = var.availability_zones[count.index]
  map_public_ip_on_launch = true

  tags = {
    Name = "${var.environment}-subnet-${count.index}"
  }
}


########################################### EXPLANATION OF EACH BLOCK IN THE SUBNET RESOURCE ##############################################

1. **`resource "aws_subnet" "subnet"`:**
   - This declares a resource block of type `aws_subnet` with the name or identifier `"subnet"`. 
   This block represents the creation of an AWS subnet.

2. **`count = length(var.availability_zones)`:**
   - The `count` argument is used to create multiple subnets based on the length of the `var.availability_zones` list. 
   For each availability zone specified, a subnet will be created.

3. **`vpc_id = aws_vpc.main.id`:**
   - This associates the subnet with the VPC created earlier. 
   It uses the `id` attribute of the `aws_vpc` resource, and `main` is the name of the VPC resource.

4. **`cidr_block = cidrsubnet(var.vpc_cidr_block, 8, count.index)`:**
   - The `cidr_block` specifies the IP address range for the subnet. It uses the `cidrsubnet` function to create subnets within the VPC's CIDR block. The parameters are:
     - `var.vpc_cidr_block`: The CIDR block of the VPC.
     - `8`: This allocates 8 bits for the subnet, creating subnets with a size of 2^(32-8) IP addresses.
     - `count.index`: This uses the current index in the loop to create unique subnets for each availability zone.

5. **`availability_zone = var.availability_zones[count.index]`:**
   - Associates the subnet with a specific availability zone. It uses the availability zones specified in the `var.availability_zones` list based on the current index.

6. **`map_public_ip_on_launch = true`:**
   - Enables the automatic assignment of a public IP address to instances launched in the subnet. This is useful for instances that need to communicate over the internet.

7. **`tags = { Name = "${var.environment}-subnet-${count.index}" }`:**
   - Adds tags to the subnet for identification and organization. The name of the subnet includes the environment and the index to make it unique.

In summary, this resource block dynamically creates subnets within the specified VPC, each associated with a unique availability zone, 
and assigns unique CIDR blocks to each subnet based on the VPC's CIDR block. The `map_public_ip_on_launch` attribute ensures that instances in these subnets receive public IP addresses. 
The tags provide a way to label and organize the subnets.